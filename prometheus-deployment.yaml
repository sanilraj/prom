apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"kube-state-metrics","app.kubernetes.io/name":"prometheus","k8s-app":"kube-state-metrics"},"name":"prometheus-kube-state-metrics","namespace":"prometheus","ownerReferences":[{"apiVersion":"app.k8s.io/v1beta1","blockOwnerDeletion":true,"kind":"Application","name":"prometheus","uid":"36962a95-2521-4e53-a23d-03b7b160ef5e"}]},"spec":{"replicas":1,"selector":{"matchLabels":{"k8s-app":"kube-state-metrics"}},"template":{"metadata":{"labels":{"k8s-app":"kube-state-metrics"}},"spec":{"containers":[{"image":"gcr.io/cloud-marketplace/google/prometheus/kubestatemetrics:2.41.0-20230226-164751","imagePullPolicy":"Always","name":"kube-state-metrics","ports":[{"containerPort":8080,"name":"http-metrics"},{"containerPort":8081,"name":"telemetry"}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":5,"timeoutSeconds":5}},{"command":["/pod_nanny","--container=kube-state-metrics","--cpu=100m","--extra-cpu=1m","--memory=100Mi","--extra-memory=2Mi","--threshold=5","--deployment=prometheus-kube-state-metrics"],"env":[{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"k8s.gcr.io/addon-resizer:1.7","name":"addon-resizer","resources":{"limits":{"cpu":"100m","memory":"30Mi"},"requests":{"cpu":"100m","memory":"30Mi"}}}],"serviceAccountName":"prometheus-kubestatemetrics-serviceaccountname-f619"}}}}
  creationTimestamp: "2023-03-03T11:18:50Z"
  generation: 1
  labels:
    app.kubernetes.io/component: kube-state-metrics
    app.kubernetes.io/name: prometheus
    k8s-app: kube-state-metrics
  name: prometheus-kube-state-metrics
  namespace: prometheus
  ownerReferences:
  - apiVersion: app.k8s.io/v1beta1
    blockOwnerDeletion: true
    kind: Application
    name: prometheus
    uid: 36962a95-2521-4e53-a23d-03b7b160ef5e
  resourceVersion: "94576"
  uid: ae6a54ad-d6dd-41ff-b3e1-5d2f9eb47530
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kube-state-metrics
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: kube-state-metrics
    spec:
      containers:
      - image: gcr.io/cloud-marketplace/google/prometheus/kubestatemetrics:2.41.0-20230226-164751
        imagePullPolicy: Always
        name: kube-state-metrics
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 8081
          name: telemetry
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - /pod_nanny
        - --container=kube-state-metrics
        - --cpu=100m
        - --extra-cpu=1m
        - --memory=100Mi
        - --extra-memory=2Mi
        - --threshold=5
        - --deployment=prometheus-kube-state-metrics
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: k8s.gcr.io/addon-resizer:1.7
        imagePullPolicy: IfNotPresent
        name: addon-resizer
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 30Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: prometheus-kubestatemetrics-serviceaccountname-f619
      serviceAccountName: prometheus-kubestatemetrics-serviceaccountname-f619
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2023-03-03T11:19:01Z"
    lastUpdateTime: "2023-03-03T11:19:01Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2023-03-03T11:18:50Z"
    lastUpdateTime: "2023-03-03T11:19:01Z"
    message: ReplicaSet "prometheus-kube-state-metrics-7687fb654d" has successfully
      progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
